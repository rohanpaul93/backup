data_music$SERVICE_PINCODE_STATE == "Tripura" |
data_music$SERVICE_PINCODE_STATE == "Bihar",
'high_convert', as.character(data_music$SERVICE_PINCODE_STATE))
data_music$SERVICE_PINCODE_STATE <- as.factor(data_music$SERVICE_PINCODE_STATE)
data_music$IS_PORTAL_USER <- ifelse(data_music$IS_PORTAL_USER=='YES',1,0)
data_music$NO_OF_PAID_ADDONS <- as.numeric(paste(data_music$NO_OF_PAID_ADDONS))
data_music$NO_OF_PAID_ADDONS<- ifelse(is.na(data_music$NO_OF_PAID_ADDONS) == TRUE,0, data_music$NO_OF_PAID_ADDONS)
data_music$NO_OF_PAID_ADDONS <- ifelse(data_music$NO_OF_PAID_ADDONS==0,0,1)
data_music$NO_OF_FREE_MULTIROOM<- ifelse(data_music$NO_OF_FREE_MULTIROOM=="0",0,1)
data_music$NO_OF_PAID_MULTIROOM<- ifelse(data_music$NO_OF_PAID_MULTIROOM=="0",0,1)
data_music$STB_Box<- as.numeric(paste(data_music$STB_Box))
data_music$STB_Box<- ifelse(is.na(data_music$STB_Box) == TRUE,4, data_music$STB_Box)
data_music$STB_Box <- as.factor(data_music$STB_Box)
data_music$LDP <- NULL
data_music$LDP <- ifelse(data_music$BASIC_PACKAGE_DURATION=='6' | data_music$BASIC_PACKAGE_DURATION=='12'| data_music$BASIC_PACKAGE_DURATION=='12','LDP','non_LDP')
data_music$LDP <- as.factor(data_music$LDP)
data_music$active_days_by_aon <- as.numeric(paste(data_music$active_days_by_aon))
data_music$active_days_by_aon<- ifelse(is.na(data_music$active_days_by_aon) == TRUE,0, data_music$active_days_by_aon)
data_music$active_days <- as.numeric(paste(data_music$active_days))
data_music$active_days<- ifelse(is.na(data_music$active_days) == TRUE,0, data_music$active_days)
data_music$ever_took_tsm_jsat <- ifelse(data_music$ever_took_tsm_jsat=="NULL",0,data_music$ever_took_tsm_jsat)
data_music$ever_took_tsm_jsat <- ifelse(data_music$ever_took_tsm_jsat==0,0,1)
data_music$diff_arpu_current_last_mth <- as.numeric(paste(data_music$diff_arpu_current_last_mth))
data_music$diff_arpu_current_last_mth<- ifelse(is.na(data_music$diff_arpu_current_last_mth) == TRUE,0, data_music$diff_arpu_current_last_mth)
data_music$ARPU  <- as.numeric(paste(data_music$ARPU))
data_music$ARPU<- ifelse(is.na(data_music$ARPU) == TRUE,0, data_music$ARPU)
data_music$das_mapping <- ifelse(data_music$das_mapping=='0','DAS 1',as.character(data_music$das_mapping))
data_music$das_mapping <- as.factor(data_music$das_mapping)
data_music$takes_tsm_next_mthv1 <- ifelse(data_music$takes_tsm_next_mthv1==0,0,1)
base <- subset(data_music,data_music$MONTH_ID<201702)
test_out_of_time <- subset(data_music,data_music$MONTH_ID==201702)
set.seed(100)
library(caret)
train.index <- createDataPartition(base$takes_tsm_next_mth,p=0.80,list=FALSE)
intime_train <- base[train.index,]
intime_test <- base[-train.index,]
memory.limit(6600000)
new_intime_train <- intime_train
rm(base,data_music,train.index)
rm(intime_test,intime_train)
rm(test_out_of_time)
new_intime_train$active_days<- scale(new_intime_train$active_days)
new_intime_train$IS_PORTAL_USER<- scale(new_intime_train$IS_PORTAL_USER)
new_intime_train$SUBSCRIBER_CURRENT_ACCOUNT_STATUS<- scale(new_intime_train$SUBSCRIBER_CURRENT_ACCOUNT_STATUS)
new_intime_train$no_of_paid_tss<- scale(new_intime_train$no_of_paid_tss)
new_intime_train$tsm_held_to_aonV2<- scale(new_intime_train$tsm_held_to_aonV2)
new_intime_train$no_of_upgrades<- scale(new_intime_train$no_of_upgrades)
new_intime_train$no_of_SPM_packs_taken<- scale(new_intime_train$no_of_SPM_packs_taken)
new_intime_train$all_lifetime_variables<- scale(new_intime_train$all_lifetime_variables)
new_intime_train$active_instances <- as.numeric(paste(new_intime_train$active_instances))
new_intime_train$active_instances<- ifelse(is.na(new_intime_train$active_instances) == TRUE,9, new_intime_train$active_instances)
new_intime_train$active_instances<- scale(new_intime_train$active_instances)
new_intime_train$ever_took_tsm_jsat<- scale(new_intime_train$ever_took_tsm_jsat)
new_intime_train$diff_arpu_current_last_mth<- scale(new_intime_train$diff_arpu_current_last_mth)
new_intime_train$NO_OF_PAID_ADDONS<- scale(new_intime_train$NO_OF_PAID_ADDONS)
new_intime_train$BALANCE_MTH_END<- scale(new_intime_train$BALANCE_MTH_END)
new_intime_train$no_of_deactivations_l3mv1  <- scale(new_intime_train$no_of_deactivations_l3mv1)
new_intime_train$ARPU<- scale(new_intime_train$ARPU)
model2 <- glm(formula = takes_tsm_next_mthv1 ~ active_days + IS_PORTAL_USER +
SUBSCRIBER_CURRENT_ACCOUNT_STATUS + STB_Box + no_of_paid_tss +
tsm_held_to_aonV2 + no_of_upgrades + no_of_SPM_packs_taken +
all_lifetime_variables + das_mapping + active_instances +
LDP + SERVICE_PINCODE_STATE + ever_took_tsm_jsat + diff_arpu_current_last_mth +
NO_OF_PAID_ADDONS +BALANCE_MTH_END + no_of_deactivations_l3mv1 +
ARPU, data = new_intime_train,family = binomial())
model2$coefficents
summary(model2)
model2$coefficients
load("C:/Users/rohan.thekanath/Desktop/Rohan/Tata sky music/final_tsm/final_latest_data.RData")
a <- as.character("a","b")
class(a)
a<- as.factor(a)
a
class(a)
a <- as.character(c("a","b"))
a
a<- as.factor(a)
a
a<- as.character(c('2','3'))
a
a<- as.factor(a)
a
a<- as.character(c('2','3'))
a<- as.numeric(a)
a
a<- as.character(c('2.3','3'))
a<- as.numeric(a)
a
a<-as.character(c('1','2','3.4'))
a
a <- as.factor(a)
a
a<- as.numeric(a)
a
a<-as.character(c('1','2','3.4'))
a<-as.character(c('1','2','3.4'))
a<- as.numeric(a)
a
a<-as.character(c('1','2.2','3.4'))
a<- as.integer(a)
a
a<-as.character(c('1','2.2','3.4'))
a<- as.numeric(a)
a
a<=2
a<-as.character(c('1','2.2','3.4'))
a<- as.numeric(a)
a <- if(a<2.5)
dvm
a <- ifelse(a <2.5,1,0)
a
a<-as.character(c('1','2.2','3.4'))
a<- as.numeric(a)
a <- ifelse(a <=2.2,1,0)
a
a<-as.character(c('1','2.2','3.4'))
a<- as.numeric(a)
a <- ifelse(a <2.2,1,0)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a <- ifelse(a <2.2,5,a)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.integer(a)
a
a <- ifelse(a <2.2,'0-2.2',as.character(a))
a
table(a)
class(a)
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.integer(a)
a <- ifelse(a <2.2,'0-2.2',as.integer(a))
a
table(a)
class(a)
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.integer(a)
a <- ifelse(a <2.2,0-2.2,a)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- paste(as.integer(a))
a
class(a)
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.integer(paste(a))
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.integer(paste(a))
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(paste(a))
a
class(a)
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a
a<-as.character(c('1','2.2','3.4','1.3','5','3.5','10','8'))
a<- as.numeric(a)
a
load("C:/Users/rohan.thekanath/Desktop/Rohan/Tata sky music/final_tsm_072017/model1.RData")
library(caret)
varImp(model1,scale=FALSE)
varImpPlot(model1,type=2)
library(caret)
varImpPlot(model1,type=2)
summary(model1)
varImpPlot(model1)
varImp(model1)
install.packages("Information")
load("C:/Users/rohan.thekanath/Desktop/Rohan/Tata sky music/final_tsm_072017/final_latest_data.RData")
head(data_music)
library(Information)
a<-create_infotables(data=data_music, y="takes_tsm_next_mth", parallel=FALSE)
summary(data_music$takes_tsm_next_mthv1)
summary(data_music$takes_tsm_next_mth)
summary(data_music
er.ve
summary(data_music)
library(ROCR)
load("C:/Users/rohan.thekanath/Desktop/Rohan/Tata sky music/final_tsm_072017/final_latest_data.RData")
str(data_music)
quantile(data_music$BALANCE_MTH_END ,0.98)
quantile(data_music$AON_IN_DAYS  ,0.98)
library(RODBC)
library(h2o)
h2o.init(
nthreads=-1,            ## -1: use all available threads
max_mem_size = "4G")    ## specify the memory size for the H2O cloud
library(h2o)
library(quanteda)
library("quanteda", lib.loc="~/R/win-library/3.4")
install.packages("Rcpp")
library(e1071)
library(datasets)
data(airquality)
ozone <- airquality$Ozone
ozone <- ozone[!is.na(ozone)]
hist(ozone, col = "tomato")
skewness(ozone)
cval <- seq(0, 20, l = 101)
skew <- cval * 0
for (i in 1:length(cval)) skew[i] <- skewness(log(cval[i] + ozone))
plot(cval, skew, type = "l", ylab = expression(b[3](c)), xlab = expression(c))
abline(h = 0, lty = 3)
best.c <- optimise(skew.score, c(0, 20), x = ozone)$minimum
skew.score <- function(c, x) (skewness(log(x + c)))^2
best.c <- optimise(skew.score, c(0, 20), x = ozone)$minimum
best.c
ozone.transformed <- log(ozone + best.c)
hist(ozone.transformed, col = "azure")
skewness(ozone.transformed)
qqnorm(ozone.transformed)
qqline(ozone.transformed)
summary(airquality$Ozone)
train <- read.csv("train.csv",header=TRUE)
test <- read.csv("test_plBmD8c.csv",header=TRUE)
library("xgboost", lib.loc="~/R/win-library/3.4")
?xgb.train
data(AirPassengers)
class(AirPassengers)
start(AirPassengers)
head(AirPassengers)
summary(AirPassengers)
frequency(AirPassengers)
plot(AirPassengers)
abline(reg=lm(AirPassengers~time(AirPassengers))
abline(reg=lm(AirPassengers~time(AirPassengers)))
abline(reg=lm(AirPassengers~time(AirPassengers)))
lm(AirPassengers~time(AirPassengers))
reg=lm(AirPassengers~time(AirPassengers))
reg
cycle(AirPassengers)
plot(aggregate(AirPassengers,FUN=mean))
boxplot(AirPassengers~cycle(AirPassengers))
install.packages("XLConnect")
raw.data <- readWorksheet(loadWorkbook("Online Retail.xlsx"), sheet=1)
library(XLConnect)
raw.data <- readWorksheet(loadWorkbook("Online Retail.xlsx"), sheet=1)
a <- as.factor(c(4,5,35,7))
as.numeric(a)
as.character(as.numeric(a))
b<-as.character(a)
c<- as.numeric(b)
head(mydata3)
head(mydata3)
fruit = c(rep(“apple”, 10), rep(“pear”, 5), rep(“banana”, 2))
fruit <- c(rep(“apple”, 10), rep(“pear”, 5), rep(“banana”, 2))
a < c(34,3,5,6,3,3,2,5,7,88,8,8,8,8,8,1,22,0)
a <- c(34,3,5,6,3,3,2,5,7,88,8,8,8,8,8,1,22,0)
table(a)
b<- table(a)
max(b)
c <- max(a)
all(a==b)
Mode = function(x){
ta = table(x)
tam = max(ta)
if (all(ta == tam))
mod = NA
else
if(is.numeric(x))
mod = as.numeric(names(ta)[ta == tam])
else
mod = names(ta)[ta == tam]
return(mod)
}
mode(a)
kings <- scan("http://robjhyndman.com/tsdldata/misc/kings.dat",skip=3)
kings
kingstimeseries <- ts(kings)
kingstimeseries
plot.ts(kingstimeseries)
set.seed(1)
n <- 1e4
d <- data.table(age = sample(1:5, n, T),
lc = rbinom(n, 1 , .5),
ants = rbinom(n, 1, .7))
library(dplyr)
d <- data.table(age = sample(1:5, n, T),
lc = rbinom(n, 1 , .5),
ants = rbinom(n, 1, .7))
library(data.table)
d <- data.table(age = sample(1:5, n, T),
lc = rbinom(n, 1 , .5),
ants = rbinom(n, 1, .7))
View(d)
table(d)
library(splitstackshape)
install.packages(splitstackshape)
install.packages('splitstackshape')
library(splitstackshape)
set.seed(1)
out <- stratified(d, c("age", "lc"), 30)
head(out)
table(out$age, out$lc)
out <- stratified(d, c("age", "lc"), 0.1)
head(out)
table(out$age, out$lc)
sample(1:5, n, T)
head(sample(1:5, n, T))
rbinom(n, 1 , .5)
a <-c('a','b','b','c')
b  <- c('a','b','b','b','d')
a<-as.data.frame(a)
View(a)
colnames(a)
b  <- c('a','b','b','b','d')
b<-as.data.frame(b)
colnames(b)
library(sqldf)
sqldf('select a.*,b.* from a left join b on a.a=b.b)
dfvf
fve
efve
efve
fvejkvnfjkv
efvjnefjbv
ebnkenbv
a <-c('a','b','b','c')
b  <- c('a','b','b','b','d')
a<-as.data.frame(a)
b<-as.data.frame(b)
library(sqldf)
sqldf('select a.*,b.* from a  left join b  on a.a=b.b')
x <- c(0, 4, 6, 0, 10)
y <- c(3, 0, 9, 12, 15)
z <- c(3, 6, 9, 0, 15)
data_a <- cbind(x,y,z)
res <- colSums(data_a==0)/nrow(data_a)*100
res
colSums(data_a==0)
row(data_a)
nrow(data_a)
row(data_a)
res <- colMeans(data_a==0)/nrow(data_a)*100
res
res
library(Information)
library(gridExtra)
options(scipen=10)
data(train, package="Information")
data(valid, package="Information")
train <- subset(train, TREATMENT==1)
valid <- subset(valid, TREATMENT==1)
y="PURCHASE")
IV <- CreateTables(data=train,
valid=valid,
y="PURCHASE")
library(Information)
IV <- CreateTables(data=train,
valid=valid,
y="PURCHASE")
install.packages("InformationValue")
install.packages("Information")
install.packages("Information")
library(Information)
mydata <- read.csv("http://www.ats.ucla.edu/stat/data/binary.csv")
mydata$rank <- factor(mydata$rank)
str(mydata)
summary(mydata)
install.packages(RCurl)
install.packages("RCurl")
library(RCurl)
x <- getURL("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/First_Health_Camp_Attend.csv")
x<-read.csv(text=getURL("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/First_Health_Camp_Attend.csv"))
urlfile<-"https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/First_Health_Camp_Attend.csv"
x<-read.csv(urlfile)
library(curl)
x <- read.csv( curl("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/First_Health_Camp_Attend.csv") )
x <- read.csv( curl("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/first_health_camp_attended.csv") )
x <- getURL("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/First_Health_Camp_Attended.csv")
x <- getURL("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/first_health_camp_attended.csv")
x<-read.csv(text=getURL("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/first_health_camp_attended.csv"))
x <-curl("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/first_health_camp_attended.csv")
library(rio)
install.packages("rio")
library(rio)
x <-import("https://github.com/caiotaniguchi/knocktober-2016/tree/master/data/first_health_camp_attended.csv")
install.packages("rio")
install.packages("rio")
library(rio)
x <-import("https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv")
require(RCurl)
a <-read.csv(text=getURL("https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv"), header=T)
ritonavir <- read.csv("https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv",
sep = ",", na.strings = "NA", strip.white = TRUE, stringsAsFactors = FALSE)
View(ritonavir)
library(RCurl)
ritonavir_url <- download.file("https://raw.githubusercontent.com/caiotaniguchi/knocktober-2016/master/data/first_health_camp_attended.csv",
"first_health_camp_attended.csv", method = "curl")
ritonavir_url <- download.file("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",
"first_health_camp_attended.csv", method = "curl")
getwd()
ritonavir_url <- download.file(https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv,
first_health_camp_attended.csv, method = curl)
ritonavir_url <- download.file("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",
first_health_camp_attended.csv, method = curl)
ritonavir_url <- download.file("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",
"first_health_camp_attended.csv", method = curl)
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",
ssl.verifypeer=FALSE) ))
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv" ))
dcsdc
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv" )))
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv" )))
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",
ssl.verifypeer=TRUE) ))
a<-eval( expr =
parse( text = getURL("https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv",ssl.verifypeer=TRUE) ))
url <- "https://raw.githubusercontent.com/caiotaniguchi/knocktober_2016/master/data/first_health_camp_attended.csv"
disproportionality.data <- getURL(url)
disproportionality.data <- read.csv(textConnection(disproportionality.data))
url <- https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv
url <- "https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv"
disproportionality.data <- getURL(url)
disproportionality.data <- read.csv(textConnection(url)
vsdv
disproportionality.data <- read.csv(textConnection(url))
disproportionality.data <- read.csv(url)
url <- https://github.com/caiotaniguchi/knocktober-2016/blob/master/data/first_health_camp_attended.csv
mdf <- read.table( text="Company   2011   2013  2011   2013  2011   2013
Company1  300    350   290    300   295    290
Company2  320    430   305    301   300    400
Company3  310    420   400    305   400    410", header = TRUE, check.names=FALSE )
View(mdf)
library("reshape2")
cat1 <- melt(mdf[c(1,2,3)], id.vars="Company", value.name="value", variable.name="Year")
cat1$Category <- "Category1"
cat2 <- melt(mdf[c(1,4,5)], id.vars="Company", value.name="value", variable.name="Year")
cat2$Category <- "Category2"
cat3 <- melt(mdf[c(1,6,7)], id.vars="Company", value.name="value", variable.name="Year")
cat3$Category <- "Category3"
mdf <- rbind(cat1, cat2, cat3)
View(mdf)
library( "plyr" )
mdf <- adply( c(1:3), 1, function( cat ){
tmp <- melt(mdf[ c(1, cat*2, cat*2+1) ], id.vars="Company", value.name="value", variable.name="Year")
tmp$Category <- paste0("Category", cat)
return(tmp)
} )
View(mdf)
pkgs <- c("keras", "lime", "tidyquant", "rsample", "recipes", "yardstick", "corrr")
install.packages(pkgs)
library(keras)
library(lime)
library(tidyquant)
library(rsample)
library(recipes)
library(yardstick)
library(corrr)
install.packages('tibble')
library(lime)
library(tidyquant)
library(rsample)
library(recipes)
library(yardstick)
library(corrr)
library(keras)
setwd("C:/Users/rohan.thekanath/Desktop/personal work/practice/teleco churn")
churn_data_raw <- read_csv("WA_Fn-UseC_-Telco-Customer-Churn.csv")
getwd()
churn_data_raw <- read_csv("WA_Fn-UseC_Telco_Customer_Churn.csv")
churn_data_raw <- read_csv("WA_Fn-UseC_Telco_Customer_Churn.csv")
glimpse(churn_data_raw)
churn_data_tbl <- churn_data_raw %>%
select(-customerID) %>%
drop_na() %>%
select(Churn, everything())
glimpse(churn_data_tbl)
set.seed(100)
train_test_split <- initial_split(churn_data_tbl, prop = 0.8)
train_test_split
train_tbl <- training(train_test_split)
test_tbl  <- testing(train_test_split)
train_tbl %>%
select(Churn, TotalCharges) %>%
mutate(
Churn = Churn %>% as.factor() %>% as.numeric(),
LogTotalCharges = log(TotalCharges)
) %>%
correlate() %>%
focus(Churn) %>%
fashion()
rec_obj <- recipe(Churn ~ ., data = train_tbl) %>%
step_discretize(tenure, options = list(cuts = 6)) %>%
step_log(TotalCharges) %>%
step_dummy(all_nominal(), -all_outcomes()) %>%
step_center(all_predictors(), -all_outcomes()) %>%
step_scale(all_predictors(), -all_outcomes()) %>%
prep(data = train_tbl)
x_train_tbl <- bake(rec_obj, newdata = train_tbl) %>% select(-Churn)
x_test_tbl  <- bake(rec_obj, newdata = test_tbl) %>% select(-Churn)
glimpse(x_train_tbl)
y_train_vec <- ifelse(pull(train_tbl, Churn) == "Yes", 1, 0)
y_test_vec  <- ifelse(pull(test_tbl, Churn) == "Yes", 1, 0)
model_keras <- keras_model_sequential()
install_keras()
install_keras()
